@inject AppDbContext dbContext
@using Microsoft.EntityFrameworkCore
@using System.Data
@{
    ViewData["title"] = "Thong tin db";
    var connect = dbContext.Database.GetDbConnection();
    var dbName = connect.Database;
    var can_connect = dbContext.Database.CanConnect();
}
<partial name="_AlertMessage" />
<h1>Thong tin Database</h1>

<p>- Database : @dbName</p>
<p>- Source : @connect.DataSource</p>
<p>- State : @connect.State</p>
<hr>
<h2>Migrations</h2>

@foreach (var migration in dbContext.Database.GetAppliedMigrations())
{
    <p>@migration</p>
}

@foreach (var migration in dbContext.Database.GetPendingMigrations())
{
    <p>@migration (pending)</p>
}



@if (!can_connect)
{
    <p class="alert alert-danger">Không thể kết nối với database</p>
}

@if(dbContext.Database.GetPendingMigrations().Any()){
  <form method="post">
  <button class="btn btn-primary" asp-action="Migate">Tao Db (Cap nhat Migration)</button>
  </form>
}

@if (can_connect)
{
    <h2>Cac Table</h2>
    await dbContext.Database.OpenConnectionAsync();
    var table = dbContext.Database.GetDbConnection().GetSchema("Tables");
    <ul>
        @foreach (System.Data.DataRow row in table.Rows)
        {
            <li>
                @row["TABLE_NAME"]
            </li>
        }
    </ul>

    <a class="btn btn-danger" asp-action="DeleteDb">Xoa Database: @dbName</a>
     <a class="btn btn-success" asp-action="SeedData">SeedData</a>
}

